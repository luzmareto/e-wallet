stages:
  - build
  - test
  - deploy

variables:
  POSTGRES_USER: root
  POSTGRES_PASSWORD: secret
  POSTGRES_DB: ewallet

services:
  - name: postgres:latest
    alias: postgres
    entrypoint: ["docker-entrypoint.sh", "postgres"]

build:
  stage: build
  image: golang:1.19

  before_script:
    - go mod download

  script:
    - go build -o build/main cmd/main.go

test:
  stage: test
  image: golang:1.19
  only:
  - development 

  before_script:
    - go mod download
    - apt-get update && apt-get install -y curl
    - curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
    - mv migrate.linux-amd64 /usr/bin/migrate
    - which migrate

  script:
    - migrate -database "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable" -path db/migration up
    - make test

deploy:
  stage: deploy
  script:
    - echo "Deploying to production..."
    # Add your deployment commands here

# Add additional stages or jobs as needed
